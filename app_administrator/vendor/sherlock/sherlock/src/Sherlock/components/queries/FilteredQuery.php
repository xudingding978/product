<?php
/**
 * User: Zachary Tong
 * Date: 2013-02-16
 * Time: 09:24 PM
 * Auto-generated by "generate.php"
 * @package Sherlock\components\queries
 */
namespace Sherlock\components\queries;

use Sherlock\components;
use Sherlock\components\FilterInterface;
use Sherlock\components\QueryInterface;

/**
 * Class FilteredQuery
 * @package Sherlock\components\queries
 */
class FilteredQuery extends \Sherlock\components\BaseComponent implements \Sherlock\components\QueryInterface
{

    /**
     * @param QueryInterface $value
     *
     * @return $this
     */
    public function query(QueryInterface $value)
    {
        $this->params['query'] = $value->toArray();
        return $this;
    }


    /**
     * @param FilterInterface $value
     *
     * @return $this
     */
    public function filter(FilterInterface $value)
    {
        $this->params['filter'] = $value->toArray();
        return $this;
    }


    /**
     * @return array
     */
    public function toArray()
    {
        $params = $this->convertParams(
            array(
                'query',
                'filter',
            )
        );

        $ret = array('filtered' => $params);

        return $ret;
    }

}
